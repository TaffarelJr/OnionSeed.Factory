<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnionSeed.Factory</name>
    </assembly>
    <members>
        <member name="T:OnionSeed.Factory.IAsyncFactory`1">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`1.CreateNewAsync">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/>.
            </summary>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`2">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using one parameter.
            </summary>
            <typeparam name="T">The type of the parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`2.CreateNewAsync(`0)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameter.
            </summary>
            <param name="arg">The parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`3">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using two parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`3.CreateNewAsync(`0,`1)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`4">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using three parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`4.CreateNewAsync(`0,`1,`2)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`5">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using four parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`5.CreateNewAsync(`0,`1,`2,`3)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`6">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using five parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`6.CreateNewAsync(`0,`1,`2,`3,`4)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`7">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using six parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`7.CreateNewAsync(`0,`1,`2,`3,`4,`5)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`8">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using seven parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`8.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`9">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using eight parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`9.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`10">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using nine parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`10.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`11">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using ten parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`11.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`12">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using eleven parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`12.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`13">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using twelve parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`13.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`14">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using thirteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`14.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`15">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using fourteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`15.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <param name="arg14">The fourteenth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`16">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using fifteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`16.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <param name="arg14">The fourteenth parameter used to construct the instance.</param>
            <param name="arg15">The fifteenth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IAsyncFactory`17">
            <summary>
            Defines a mechanism that can be used to asynchronously construct instances of a specified type <typeparamref name="TResult"/> using sixteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IAsyncFactory`17.CreateNewAsync(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <param name="arg14">The fourteenth parameter used to construct the instance.</param>
            <param name="arg15">The fifteenth parameter used to construct the instance.</param>
            <param name="arg16">The sixteenth parameter used to construct the instance.</param>
            <returns>A task representing the operation. Upon completion, it will contain
            a new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`1">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`1.CreateNew">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/>.
            </summary>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`2">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using one parameter.
            </summary>
            <typeparam name="T">The type of the parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`2.CreateNew(`0)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameter.
            </summary>
            <param name="arg">The parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`3">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using two parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`3.CreateNew(`0,`1)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`4">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using three parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`4.CreateNew(`0,`1,`2)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`5">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using four parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`5.CreateNew(`0,`1,`2,`3)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`6">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using five parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`6.CreateNew(`0,`1,`2,`3,`4)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`7">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using six parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`7.CreateNew(`0,`1,`2,`3,`4,`5)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`8">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using seven parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`8.CreateNew(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`9">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using eight parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`9.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`10">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using nine parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`10.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`11">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using ten parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`11.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`12">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using eleven parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`12.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`13">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using twelve parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`13.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`14">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using thirteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`14.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`15">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using fourteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`15.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <param name="arg14">The fourteenth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`16">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using fifteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`16.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <param name="arg14">The fourteenth parameter used to construct the instance.</param>
            <param name="arg15">The fifteenth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="T:OnionSeed.Factory.IFactory`17">
            <summary>
            Defines a mechanism that can be used to construct instances of a specified type <typeparamref name="TResult"/> using sixteen parameters.
            </summary>
            <typeparam name="T1">The type of the first parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T2">The type of the second parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T3">The type of the third parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T4">The type of the fourth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T5">The type of the fifth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T6">The type of the sixth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T7">The type of the seventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T8">The type of the eighth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T9">The type of the ninth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T10">The type of the tenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter. This type parameter is contravariant.</typeparam>
            <typeparam name="TResult">The type to be constructed. This type parameter is covariant.</typeparam>
        </member>
        <member name="M:OnionSeed.Factory.IFactory`17.CreateNew(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Creates a new instance of type <typeparamref name="TResult"/> using the given parameters.
            </summary>
            <param name="arg1">The first parameter used to construct the instance.</param>
            <param name="arg2">The second parameter used to construct the instance.</param>
            <param name="arg3">The third parameter used to construct the instance.</param>
            <param name="arg4">The fourth parameter used to construct the instance.</param>
            <param name="arg5">The fifth parameter used to construct the instance.</param>
            <param name="arg6">The sixth parameter used to construct the instance.</param>
            <param name="arg7">The seventh parameter used to construct the instance.</param>
            <param name="arg8">The eighth parameter used to construct the instance.</param>
            <param name="arg9">The ninth parameter used to construct the instance.</param>
            <param name="arg10">The tenth parameter used to construct the instance.</param>
            <param name="arg11">The eleventh parameter used to construct the instance.</param>
            <param name="arg12">The twelfth parameter used to construct the instance.</param>
            <param name="arg13">The thirteenth parameter used to construct the instance.</param>
            <param name="arg14">The fourteenth parameter used to construct the instance.</param>
            <param name="arg15">The fifteenth parameter used to construct the instance.</param>
            <param name="arg16">The sixteenth parameter used to construct the instance.</param>
            <returns>A new instance of type <typeparamref name="TResult"/>.</returns>
        </member>
    </members>
</doc>
